/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    products: Product;
    media: Media;
    product_files: ProductFile;
    orders: Order;
    tags: Tag;
    countries: Country;
    producers: Producer;
    bookmarks: Bookmark;
    bookmarksCollection: BookmarksCollection;
    reviews: Review;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: string;
  products?: (string | Product)[] | null;
  reviews?: (string | Review)[] | null;
  product_files?: (string | ProductFile)[] | null;
  role: 'admin' | 'user';
  firstName: string;
  lastName: string;
  country: string;
  bookmarksCollections?: (string | BookmarksCollection)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Product {
  id: string;
  user?: (string | null) | User;
  name: string;
  description?: string | null;
  price: number;
  category: 'wines' | 'icons';
  product_files?: (string | null) | ProductFile;
  approvedForSale?: ('pending' | 'approved' | 'denied') | null;
  priceId?: string | null;
  stripeId?: string | null;
  images: {
    image: string | Media;
    id?: string | null;
  }[];
  rating?: number | null;
  tags?: (string | Tag)[] | null;
  country?: (string | null) | Country;
  region?: string | null;
  grape?: string | null;
  color?: string | null;
  alcohol?: string | null;
  vintage?: string | null;
  producer?: (string | null) | Producer;
  updatedAt: string;
  createdAt: string;
}
export interface ProductFile {
  id: string;
  user?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
export interface Media {
  id: string;
  user?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface Tag {
  id: string;
  title?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Country {
  id: string;
  name: string;
  code: string;
  flag?: string | Media | null;
  updatedAt: string;
  createdAt: string;
}
export interface Producer {
  id: string;
  title?: string | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Review {
  id: string;
  author?: (string | null) | User;
  rating?: number | null;
  content?: string | null;
  replyPost?: (string | null) | Product;
  replyComment?: (string | null) | Review;
  isApproved?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
export interface BookmarksCollection {
  id: string;
  title: string;
  bookmarks?: (string | Bookmark)[] | null;
  user: string | User;
  image?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Bookmark {
  id: string;
  product: string | Product;
  user: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Order {
  id: string;
  _isPaid: boolean;
  user: string | User;
  products: (string | Product)[];
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}